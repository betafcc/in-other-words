{"version":3,"sources":["Translator.ts","util.ts","components/LanguageButton.tsx","components/LanguageAddButton.tsx","components/LanguageSearch.tsx","components/AppBar.tsx","components/InOtherWords.tsx","program.ts","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Translator","token","source","option","fetch","enpoint","method","body","URLSearchParams","key","this","lang","from","to","text","format","then","r","json","code","result","Promise","reject","codes","current","slice","translate","update","az","ml","sq","mt","am","mk","en","mi","ar","mr","hy","mhr","af","mn","eu","de","ba","ne","be","no","bn","pa","my","pap","bg","fa","bs","pl","cy","pt","hu","ro","vi","ru","ht","ceb","gl","sr","nl","si","mrj","sk","el","sl","ka","sw","gu","su","da","tg","he","th","yi","tl","id","ta","ga","tt","it","te","is","tr","es","udm","kk","uz","kn","uk","ca","ur","ky","fi","zh","fr","ko","hi","xh","hr","km","cs","lo","sv","la","gd","lv","et","lt","eo","lb","jv","mg","ja","ms","languages","Object","entries","map","name","sort","a","b","localeCompare","useStyles","makeStyles","theme","default","focused","borderColor","done","palette","success","light","pointerEvents","loading","warning","waiting","opacity","LanguageButton","status","onClick","classes","Button","variant","className","root","borderStyle","color","disabled","primary","backgroundColor","LanguageAddButton","props","borderRadius","boxShadow","input","fontSize","typography","h6","width","padding","options","margin","listStyle","display","gridTemplateColumns","body1","selected","background","getContrastText","LanguageSearch","searchValue","onSearchValueChange","onSelect","onRemove","onClose","searchValueLower","toLowerCase","Paper","InputBase","autoFocus","placeholder","value","onChange","e","target","endAdornment","InputAdornment","position","IconButton","_","filter","match","ButtonBase","style","appBar","borderBottom","menuButton","title","flexGrow","AppBar","elevation","Toolbar","Typography","href","edge","height","main","minWidth","maxWidth","bar","flexFlow","translateButton","border","overflowX","paper","contentContainer","content","minHeight","languageSearch","top","textarea","fontFamily","overflow","outline","resize","inputCard","borderRight","outputRunning","InOtherWords","inputValue","outputValue","focus","setInput","setSearch","addLanguage","removeLanguage","editLanguage","closeSearch","Divider","orientation","flexItem","Card","square","CardContent","length","TranslateButton","Languages","i","languageButtonState","state","Textarea","TextareaAutosize","rows","spellCheck","autoCapitalize","autoComplete","autoCorrect","PoweredByYandex","textAlign","marginTop","textDecoration","marginRight","initial","reducer","s","type","payload","concat","action","queryInitial","q","queryString","parse","window","location","search","arrayFormat","o","undefined","l","Array","isArray","getQuery","sleep","resolve","setTimeout","App","useReducer","dispatch","useEffect","newurl","protocol","host","pathname","stringify","fromEntries","history","pushState","path","setQuery","create","inOtherWords","index","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"6ZAAaA,EAAb,WAGE,WAAqBC,GAAgB,yBAAhBA,QAHvB,sDAWYC,EAAgBC,GACxB,OAAOC,MAAMJ,EAAWK,QAAS,CAC/BC,OAAQ,OACRC,KAAM,IAAIC,gBAAgB,CACxBC,IAAKC,KAAKT,MACVU,KAAK,GAAD,OAAKR,EAAOS,KAAZ,YAAoBT,EAAOU,IAC/BC,KAAMZ,EACNa,OAAQ,YAGTC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACC,GAAD,OACJA,EAAEE,MAAmB,MAAXF,EAAEE,KAAZ,aACMjB,SAAQkB,OAAQH,EAAEH,KAAK,IAAOX,GAChCkB,QAAQC,OAAOL,QAzB3B,mCA6BsBf,EAAgBqB,GAA6C,IAAD,8HAC1EC,EAAkB,CACpBtB,SACAkB,OAAQlB,EACRU,KAAMW,EAAM,GACZV,GAAIU,EAAM,IALkE,cAQ3DA,EAAME,MAAM,IAR+C,gEAQnEN,EARmE,6BASrD,EAAKO,UAAUF,EAAQJ,OAAQ,CACpDR,KAAMY,EAAQX,GACdA,GAAIM,KAXsE,OAS5E,OAT4E,UASrEK,EAAP,OAT4E,4MA7BlF,gCAOK,IADDvB,EACA,uDADgB,uFAEhB,OAAO,IAAID,EAAWC,OAR1B,KAAaD,EACJK,QAAU,0DAyDZ,IC1CyBsB,ED0CnBJ,EAAQ,CACnBK,GAAI,aACJC,GAAI,YACJC,GAAI,WACJC,GAAI,UACJC,GAAI,UACJC,GAAI,aACJC,GAAI,UACJC,GAAI,QACJC,GAAI,SACJC,GAAI,UACJC,GAAI,WACJC,IAAK,OACLC,GAAI,YACJC,GAAI,YACJC,GAAI,SACJC,GAAI,SACJC,GAAI,UACJC,GAAI,SACJC,GAAI,aACJC,GAAI,YACJC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,IAAK,aACLC,GAAI,YACJC,GAAI,UACJC,GAAI,UACJC,GAAI,SACJC,GAAI,QACJC,GAAI,aACJC,GAAI,YACJC,GAAI,WACJC,GAAI,aACJC,GAAI,UACJC,GAAI,mBACJC,IAAK,UACLC,GAAI,WACJC,GAAI,UACJC,GAAI,QACJC,GAAI,UACJC,IAAK,YACLC,GAAI,YACJC,GAAI,QACJC,GAAI,YACJC,GAAI,WACJC,GAAI,UACJC,GAAI,WACJC,GAAI,YACJC,GAAI,SACJC,GAAI,QACJC,GAAI,SACJC,GAAI,OACJC,GAAI,UACJC,GAAI,UACJC,GAAI,aACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,UACJC,GAAI,SACJC,GAAI,YACJC,GAAI,UACJC,GAAI,UACJC,IAAK,SACLC,GAAI,SACJC,GAAI,QACJC,GAAI,UACJC,GAAI,YACJC,GAAI,UACJC,GAAI,OACJC,GAAI,SACJC,GAAI,UACJC,GAAI,UACJC,GAAI,SACJC,GAAI,SACJC,GAAI,QACJC,GAAI,QACJC,GAAI,WACJC,GAAI,QACJC,GAAI,QACJC,GAAI,UACJC,GAAI,UACJC,GAAI,QACJC,GAAI,WACJC,GAAI,UACJC,GAAI,WACJC,GAAI,aACJC,GAAI,YACJC,GAAI,gBACJC,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,SAGOC,EAA6BC,OAAOC,QAAQpG,GACtDqG,KAAI,yCAAa,CAAEzG,KAAf,KAAwB0G,KAAxB,SACJC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,KAAKI,cAAcD,EAAEH,SEtJnCK,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,GACTC,QAAS,CACPC,YAAa,QAEfC,KAAM,CACJD,YAAaH,EAAMK,QAAQC,QAAQC,MACnCC,cAAe,QAEjBC,QAAS,CACPN,YAAaH,EAAMK,QAAQK,QAAQH,MACnCC,cAAe,QAEjBG,QAAS,CACPC,QAAS,GACTJ,cAAe,YAUNK,EAA0C,SAAC,GAIjD,IAHL9H,EAGI,EAHJA,KAGI,IAFJ+H,cAEI,MAFK,UAEL,EADJC,EACI,EADJA,QAEMC,EAAUlB,IAEhB,OACE,kBAACmB,EAAA,EAAD,CAAQC,QAAQ,WAAWC,UAAWH,EAAQF,GAASC,QAASA,GAC7D5H,EAAMJ,K,iBCnCP+G,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoB,KAAM,CACJC,YAAa,SACbC,MAAOtB,EAAMK,QAAQ3H,KAAK6I,SAE1B,UAAW,CACTD,MAAOtB,EAAMK,QAAQ3H,KAAK8I,QAC1BrB,YAAaH,EAAMK,QAAQ3H,KAAK8I,QAChCC,gBAAiB,yBAOVC,EAAgD,SAAC,GAAkB,IAAbC,EAAY,oBACvEX,EAAUlB,IAEhB,OACE,kBAACmB,EAAA,EAAD,eAAQE,UAAWH,EAAQI,KAAMF,QAAQ,YAAeS,GACtD,kBAAC,IAAD,Q,6ECfA7B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoB,KAAM,CACJQ,aAAc,EACdC,UAAW,QAGbC,MAAO,CACLC,SAAU/B,EAAMgC,WAAWC,GAAGF,SAC9BG,MAAO,OACPC,QAAS,QACTP,aAAc,EACdC,UAAW,kCAGbO,QAAS,CACPC,OAAQ,YACRF,QAAS,EACTG,UAAW,OACXC,QAAS,OACTC,oBAAqB,iBACrBX,UAAW,kCAGb9J,OAAQ,CACNgK,SAAU/B,EAAMgC,WAAWS,MAAMV,SACjCQ,QAAS,OACTJ,QAAS,SAGXO,SAAU,CACRC,WAAY3C,EAAMK,QAAQmB,QAAQjB,MAClCe,MAAOtB,EAAMK,QAAQuC,gBAAgB5C,EAAMK,QAAQmB,QAAQjB,YAalDsC,EAA0C,SAAC,GAOjD,IANLC,EAMI,EANJA,YACAJ,EAKI,EALJA,SACAK,EAII,EAJJA,oBACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACAC,EACI,EADJA,QAEMlC,EAAUlB,IACVqD,EAAmBL,EAAYM,cAErC,OACE,kBAACC,EAAA,EAAD,CAAOlC,UAAWH,EAAQI,MACxB,kBAACkC,EAAA,EAAD,CACEC,WAAS,EACTpC,UAAWH,EAAQc,MACnB0B,YAAY,mBACZC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAAoBY,EAAEC,OAAOH,QAC9CI,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACC,EAAA,EAAD,CAAYjD,QAAS,SAACkD,GAAD,OAAOhB,MAC1B,kBAAC,IAAD,OAEF,kBAACe,EAAA,EAAD,CAAYjD,QAAS,SAACkD,GAAD,OAAOf,MAC1B,kBAAC,IAAD,UAKR,wBAAI/B,UAAWH,EAAQoB,SACpB/C,EACE6E,QAAO,SAACP,GAAD,OAAOA,EAAElE,KAAK2D,cAAce,MAAMhB,MACzC3D,KAAI,SAACmE,GAAD,OACH,wBACEtL,IAAKsL,EAAE5K,KACPoI,UACEH,EAAQjJ,OAAS,KAAO4L,EAAE5K,OAAS2J,EAAW1B,EAAQ0B,SAAW,KAGnE,kBAAC0B,EAAA,EAAD,CACEC,MAAO,CAAEtC,SAAU,WACnBhB,QAAS,SAACkD,GAAD,OAAOjB,EAASW,EAAE5K,QAE1B4K,EAAElE,a,4CC1FbK,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsE,OAAQ,CACN7C,gBAAiB,QACjB8C,aAAc,6BACdjD,MAAO,WAGTkD,WAAY,GAEZC,MAAO,CACLC,SAAU,OAIDC,GAAa,WACxB,IAAM3D,EAAUlB,KAEhB,OACE,kBAAC,IAAD,CAAWiE,SAAS,SAASa,UAAW,EAAGzD,UAAWH,EAAQsD,QAC5D,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY5D,QAAQ,KAAKC,UAAWH,EAAQyD,OAA5C,WAEE,0BAAMJ,MAAO,CAAE/C,MAAO,YAAtB,MACA,0BAAM+C,MAAO,CAAE/C,MAAO,YAAtB,KACA,0BAAM+C,MAAO,CAAE/C,MAAO,YAAtB,KACA,0BAAM+C,MAAO,CAAE/C,MAAO,YAAtB,KACA,0BAAM+C,MAAO,CAAE/C,MAAO,YAAtB,MAEF,kBAAC0C,EAAA,EAAD,CACEe,KAAK,4CAGLC,KAAK,MACL7D,UAAWH,EAAQwD,WACnBlD,MAAM,WAEN,kBAAC,KAAD,UC3BJxB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoB,KAAM,CACJ6D,OAAQ,OACRxD,gBAAiBzB,EAAMK,QAAQsC,WAAW1C,SAG5CiF,KAAM,CACJC,SAAU,IACVC,SAAU,KACV/C,OAAQ,UAGVgD,IAAK,CACH9C,QAAS,OACT+C,SAAU,aACVjD,OAAQ,EACRF,QAAS,SAET,OAAQ,CACNE,OAAQ,UAIZkD,gBAAiB,CACfhD,QAAS,cACTJ,QAAS,MAET,WAAY,CACVV,gBAAiB,UACjBH,MAAO,UACPkE,OAAQ,oBAER,UAAW,CACT/D,gBAAiB,qBACjBtB,YAAa,sBAGf,iBAAkB,CAChBsB,gBAAiB,OACjBH,MAAO,UAKbjC,UAAW,CACTqF,SAAU,EACVnC,QAAS,OACT+C,SAAU,WACVG,UAAW,OAEX,OAAQ,CACNpD,OAAQ,OAGV,WAAY,CACVZ,gBAAiBzB,EAAMK,QAAQsC,WAAW+C,QAI9CC,iBAAkB,CAChB5B,SAAU,YAGZ6B,QAAS,CACPJ,OAAQ,6BACR3D,UAAW,6BACXgE,UAAW,OACXtD,QAAS,OACT+C,SAAU,aACV,OAAQ,CACNpD,MAAO,OAGT,oBAAqB,CACnBT,gBAAiB,YAIrBqE,eAAgB,CACd/B,SAAU,WACV7B,MAAO,OACP6D,IAAK,GAGPC,SAAU,CACR9D,MAAO,OACP+C,OAAQ,OACRtC,WAAY,OACZZ,SAAU,SACVkE,WAAYjG,EAAMgC,WAAWiE,WAC7B3E,MAAOtB,EAAMK,QAAQ3H,KAAK8I,QAC1B0E,SAAU,cACVC,QAAS,OACTX,OAAQ,OACRY,OAAQ,QAGVC,UAAW,CACTC,YAAa,8BAGfC,cAAe,CACbjF,MAAOtB,EAAMK,QAAQ3H,KAAK6I,cAejBiF,GAAwC,SAAC,GAiB/C,IAhBL1F,EAgBI,EAhBJA,OACAzB,EAeI,EAfJA,UACAa,EAcI,EAdJA,QACA4C,EAaI,EAbJA,YACA2D,EAYI,EAZJA,WACAC,EAWI,EAXJA,YACAtG,EAUI,EAVJA,KAEA9G,EAQI,EARJA,UACAqN,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAC,EAKI,EALJA,UACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,aACAC,EACI,EADJA,YAEMjG,EAAUlB,KAEhB,OACE,yBAAKqB,UAAWH,EAAQI,MACtB,kBAAC,GAAD,MACA,yBAAKD,UAAWH,EAAQkE,MACtB,yBAAK/D,UAAWH,EAAQqE,KACtB,kBAAC,GAAD,CAAiBvE,OAAQA,EAAQzB,UAAWA,EAAW/F,UAAWA,IAClE,kBAAC4N,EAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,IACxC,kBAAC,GAAD,CACE/H,UAAWA,EACXyB,OAAQA,EACRV,KAAMA,EACNF,QAASA,EACTyG,MAAOA,KAGX,yBAAKxF,UAAWH,EAAQ2E,kBACtB,kBAAC0B,EAAA,EAAD,CAAMlG,UAAWH,EAAQ4E,QAAS0B,QAAM,EAAC1C,UAAW,GAClD,kBAAC2C,EAAA,EAAD,CAAapG,UAAWH,EAAQqF,WAC9B,kBAAC,GAAD,CAAU5C,MAAOgD,EAAY/C,SAAU,SAACC,GAAD,OAAOiD,EAASjD,EAAEC,OAAOH,WAElE,kBAAC8D,EAAA,EAAD,KACE,kBAAC,GAAD,CACEhG,UAAQ,EACRJ,UAAsB,YAAXL,EAAuBE,EAAQuF,cAAgB,GAC1D9C,MAAOiD,MAID,YAAX5F,EACC,yBAAKK,UAAWH,EAAQ8E,gBACtB,kBAAC,EAAD,CACEhD,YAAaA,EACbJ,SAAUrD,EAAUa,GACpB6C,oBAAqB,SAACU,GAAD,OAAWoD,EAAUpD,IAC1CT,SAAU,SAACjK,GACLmH,GAAWb,EAAUmI,OAAQV,EAAY/N,GACxCiO,EAAajO,IAEpBkK,SAAU8D,EACV7D,QAAS+D,KAGX,MAEN,kBAAC,GAAD,SAMKQ,GAET,SAAC,GAAsC,IAApC3G,EAAmC,EAAnCA,OAAQzB,EAA2B,EAA3BA,UAAW/F,EAAgB,EAAhBA,UAClB0H,EAAUlB,KAEhB,OACE,yBAAKqB,UAAWH,EAAQuE,iBACtB,kBAACtE,EAAA,EAAD,CACEM,SAAqB,YAAXT,EACVI,QAAQ,WACRH,QAAS,SAACkD,GAAD,OAAO3K,EAAU+F,KAE1B,kBAAC,IAAD,SAMKqI,GAET,SAAC,GAAiD,IAA/C5G,EAA8C,EAA9CA,OAAQzB,EAAsC,EAAtCA,UAAWe,EAA2B,EAA3BA,KAAMF,EAAqB,EAArBA,QAASyG,EAAY,EAAZA,MACjC3F,EAAUlB,KAEhB,OACE,yBAAKqB,UAAWH,EAAQ3B,WACrBA,EAAUG,KAAI,SAACzG,EAAM4O,GAAP,OACb,kBAAC,EAAD,CACEtP,IAAG,UAAKU,EAAL,YAAa4O,GAChB7G,OAAQ8G,GAAoB,CAAE9G,SAAQV,OAAMF,WAAWyH,GACvD5O,KAAMA,EACNgI,QAAS,kBAAM4F,EAAMgB,SAGb,YAAX7G,GAAwBzB,EAAUmI,QAAU,GAAK,KAChD,kBAAC,EAAD,CAAmBzG,QAAS,kBAAM4F,EAAMtH,EAAUmI,aAMpDI,GAGwD,SAACC,EAAOF,GACpE,MAAqB,YAAjBE,EAAM/G,OACJ6G,EAAIE,EAAMzH,KAAa,OAClBuH,IAAME,EAAMzH,KAAa,UACtB,UAES,YAAjByH,EAAM/G,QAAwB6G,IAAME,EAAM3H,QAAgB,UAClD,WAIH4H,GAAsC,SAAC,GAA6B,IAA3B3G,EAA0B,EAA1BA,UAAcQ,EAAY,6BACxEX,EAAUlB,KAEhB,OACE,kBAACiI,EAAA,EAAD,eACE5G,UAAWH,EAAQgF,SAAW,IAAM7E,EACpC6G,KAAM,EACNC,YAAY,EACZC,eAAe,MACfC,aAAa,MACbC,YAAY,OACRzG,KAKG0G,GAAsB,kBACjC,yBACEhE,MAAO,CACL9B,QAAS,QACTL,MAAO,OACPoG,UAAW,QACXC,UAAW,UAGb,uBACElE,MAAO,CACLmE,eAAgB,OAChBlH,MAAO,OACPmH,YAAa,SAEf1D,KAAK,+BANP,uB,SC5QS2D,GAAiB,CAC5B5H,OAAQ,UAERzB,UAAW,GACXa,QAAS,EACT4C,YAAa,GAEb2D,WAAY,GACZC,YAAa,GAEbtG,KAAM,GAeKuI,INxBmBpP,EMwBgB,SAACqP,EAAGjJ,GAClD,OAAQA,EAAEkJ,MACR,IAAK,cACH,MAAO,CACL/H,OAAQ,UACRgC,YAAa,GACbzD,UAAU,GAAD,oBAAMuJ,EAAEvJ,WAAR,CAAmBM,EAAEmJ,WAElC,IAAK,iBACH,MAAO,CACLhI,OAAQ,UACRgC,YAAa,GACbzD,UAAWuJ,EAAEvJ,UACVhG,MAAM,EAAGuP,EAAE1I,SACX6I,OAAOH,EAAEvJ,UAAUhG,MAAMuP,EAAE1I,QAAU,KAE5C,IAAK,eACH,MAAO,CACLY,OAAQ,UACRgC,YAAa,GACbzD,UAAWuJ,EAAEvJ,UAAUG,KAAI,SAACmE,EAAGgE,GAAJ,OAAWiB,EAAE1I,UAAYyH,EAAIhE,EAAIhE,EAAEmJ,YAElE,IAAK,WACH,MAAO,CAAErC,WAAY9G,EAAEmJ,QAASpC,YAAa,IAC/C,IAAK,YACH,MAAO,CAAE5D,YAAanD,EAAEmJ,SAC1B,IAAK,cACH,MAAO,CAAEhI,OAAQ,UAAWgC,YAAa,IAC3C,IAAK,QACH,MAAO,CAAEhC,OAAQ,UAAWZ,QAASP,EAAEmJ,SACzC,IAAK,QACH,MAAO,CAAEhI,OAAQ,UAAWV,KAAM,GACpC,IAAK,OACH,MAAO,CAAEU,OAAQ,WACnB,IAAK,UACH,MAAO,CAAEV,KAAMwI,EAAExI,KAAO,EAAGsG,YAAa/G,EAAEmJ,WN3DyB,SACvEjB,EACAmB,GAFuE,sBAG9DnB,EAH8D,GAGpDtO,EAAOsO,EAAOmB,MOmB7BC,GAVW,WACf,IAAMC,EAAIC,IAAYC,MAAMC,OAAOC,SAASC,OAAQ,CAAEC,YAAa,UAEnE,MAAO,CACL/C,WAAYyC,EAAEvB,GAAK,GACnBjB,YAAawC,EAAEO,GAAK,GACpBpK,eAAmBqK,IAARR,EAAES,EAAkB,GAAKC,MAAMC,QAAQX,EAAES,GAAKT,EAAES,EAAI,CAACT,EAAES,IAIjDG,GAEfC,GAAQ,SAAC3K,GAAD,OAAgB,IAAInG,SAAQ,SAAC+Q,GAAD,OAAaC,WAAWD,EAAS5K,OAE9D8K,GAAU,WAAO,IAAD,EACDC,qBAAWxB,GAAD,eAC/BD,GAD+B,GAE/BO,KAHsB,mBACpBpB,EADoB,KACbuC,EADa,KAQ3B,OAFAC,qBAAU,kBAzCK,SAACxC,GAChB,IAAMyC,EACJjB,OAAOC,SAASiB,SAChB,KACAlB,OAAOC,SAASkB,KAChBnB,OAAOC,SAASmB,SAChB,IACAtB,IAAYuB,UACVpL,OAAOqL,YACL,CACE,CAAC,IAAK9C,EAAMpB,YACZ,CAAC,IAAsB,YAAjBoB,EAAM/G,OAAuB,GAAK+G,EAAMnB,aAC9C,CAAC,IAAKmB,EAAMxI,YACZ6E,QAAO,SAACP,GAAD,QAASA,EAAE,OAEtB,CAAE6F,YAAa,UAGnBH,OAAOuB,QAAQC,UAAU,CAAEC,KAAMR,GAAU,GAAIA,GAuB/BS,CAASlD,MAGvB,kBAAC,GAAD,iBACMA,EADN,CAEEvO,UAAS,uCAAE,WAAO+F,GAAP,yBAAAM,EAAA,2DACLkI,EAAMxI,UAAUmI,QAAU,GADrB,iBAEP4C,EAAS,CAAEvB,KAAM,UAFV,iCAIgBjR,EAAWoT,SAASC,aACzCpD,EAAMpB,WACNoB,EAAMxI,YAND,gIAQL+K,EAAS,CAAEvB,KAAM,UAAWC,QARvB,EAQmC9P,SARnC,UASC+Q,GAAM,KATP,iTAYPK,EAAS,CAAEvB,KAAM,SAZV,4EAAF,sDAeTlC,MAAO,SAACuE,GAAD,OAAWd,EAAS,CAAEvB,KAAM,QAASC,QAASoC,KACrDtE,SAAU,SAACnD,GAAD,OAAW2G,EAAS,CAAEvB,KAAM,WAAYC,QAASrF,KAC3DoD,UAAW,SAACpD,GAAD,OAAW2G,EAAS,CAAEvB,KAAM,YAAaC,QAASrF,KAC7DqD,YAAa,SAAC/N,GAAD,OAAUqR,EAAS,CAAEvB,KAAM,cAAeC,QAAS/P,KAChEiO,aAAc,SAACjO,GAAD,OAAUqR,EAAS,CAAEvB,KAAM,eAAgBC,QAAS/P,KAClEgO,eAAgB,kBAAMqD,EAAS,CAAEvB,KAAM,oBACvC5B,YAAa,kBAAMmD,EAAS,CAAEvB,KAAM,qBC9DtBsC,QACW,cAA7B9B,OAAOC,SAAS8B,UAEe,UAA7B/B,OAAOC,SAAS8B,UAEhB/B,OAAOC,SAAS8B,SAASjH,MACvB,2DCZNkH,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhT,MAAK,SAAAiT,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3e890bb9.chunk.js","sourcesContent":["export class Translator {\n  static enpoint = 'https://translate.yandex.net/api/v1.5/tr.json/translate'\n\n  constructor(readonly token: string) {}\n\n  static create(\n    token: string = 'trnsl.1.1.20200420T225100Z.86349b444c5b9364.e7816b7b18bc06578c564e8e9c9da76a5bac78e7'\n  ) {\n    return new Translator(token)\n  }\n\n  translate(source: string, option: Option): Promise<Result> {\n    return fetch(Translator.enpoint, {\n      method: 'post',\n      body: new URLSearchParams({\n        key: this.token,\n        lang: `${option.from}-${option.to}`,\n        text: source,\n        format: 'plain',\n      }),\n    })\n      .then((r) => r.json())\n      .then((r) =>\n        r.code && r.code === 200\n          ? { source, result: r.text[0], ...option }\n          : Promise.reject(r)\n      )\n  }\n\n  async *inOtherWords(source: string, codes: Array<Code>): AsyncGenerator<Result> {\n    let current: Result = {\n      source,\n      result: source,\n      from: codes[0],\n      to: codes[0],\n    }\n\n    for (const code of codes.slice(1))\n      yield (current = await this.translate(current.result, {\n        from: current.to,\n        to: code,\n      }))\n  }\n}\n\nexport type Result = Option & {\n  source: string\n  result: string\n}\n\nexport type Option = { from: Code; to: Code }\n\nexport type Language = { [K in Code]: { code: K; name: Codes[K] } }[Code]\n\nexport type Codes = typeof codes\n\nexport type Code = keyof Codes\n\nexport const codes = {\n  az: 'Azerbaijan',\n  ml: 'Malayalam',\n  sq: 'Albanian',\n  mt: 'Maltese',\n  am: 'Amharic',\n  mk: 'Macedonian',\n  en: 'English',\n  mi: 'Maori',\n  ar: 'Arabic',\n  mr: 'Marathi',\n  hy: 'Armenian',\n  mhr: 'Mari',\n  af: 'Afrikaans',\n  mn: 'Mongolian',\n  eu: 'Basque',\n  de: 'German',\n  ba: 'Bashkir',\n  ne: 'Nepali',\n  be: 'Belarusian',\n  no: 'Norwegian',\n  bn: 'Bengali',\n  pa: 'Punjabi',\n  my: 'Burmese',\n  pap: 'Papiamento',\n  bg: 'Bulgarian',\n  fa: 'Persian',\n  bs: 'Bosnian',\n  pl: 'Polish',\n  cy: 'Welsh',\n  pt: 'Portuguese',\n  hu: 'Hungarian',\n  ro: 'Romanian',\n  vi: 'Vietnamese',\n  ru: 'Russian',\n  ht: 'Haitian (Creole)',\n  ceb: 'Cebuano',\n  gl: 'Galician',\n  sr: 'Serbian',\n  nl: 'Dutch',\n  si: 'Sinhala',\n  mrj: 'Hill Mari',\n  sk: 'Slovakian',\n  el: 'Greek',\n  sl: 'Slovenian',\n  ka: 'Georgian',\n  sw: 'Swahili',\n  gu: 'Gujarati',\n  su: 'Sundanese',\n  da: 'Danish',\n  tg: 'Tajik',\n  he: 'Hebrew',\n  th: 'Thai',\n  yi: 'Yiddish',\n  tl: 'Tagalog',\n  id: 'Indonesian',\n  ta: 'Tamil',\n  ga: 'Irish',\n  tt: 'Tatar',\n  it: 'Italian',\n  te: 'Telugu',\n  is: 'Icelandic',\n  tr: 'Turkish',\n  es: 'Spanish',\n  udm: 'Udmurt',\n  kk: 'Kazakh',\n  uz: 'Uzbek',\n  kn: 'Kannada',\n  uk: 'Ukrainian',\n  ca: 'Catalan',\n  ur: 'Urdu',\n  ky: 'Kyrgyz',\n  fi: 'Finnish',\n  zh: 'Chinese',\n  fr: 'French',\n  ko: 'Korean',\n  hi: 'Hindi',\n  xh: 'Xhosa',\n  hr: 'Croatian',\n  km: 'Khmer',\n  cs: 'Czech',\n  lo: 'Laotian',\n  sv: 'Swedish',\n  la: 'Latin',\n  gd: 'Scottish',\n  lv: 'Latvian',\n  et: 'Estonian',\n  lt: 'Lithuanian',\n  eo: 'Esperanto',\n  lb: 'Luxembourgish',\n  jv: 'Javanese',\n  mg: 'Malagasy',\n  ja: 'Japanese',\n  ms: 'Malay',\n} as const\n\nexport const languages: Array<Language> = Object.entries(codes)\n  .map(([k, v]) => ({ code: k, name: v } as Language))\n  .sort((a, b) => a.name.localeCompare(b.name))\n","import { Reducer } from 'react'\n\nexport const zip = <X, Y>(xs: Array<X>, ys: Array<Y>): Array<[X, Y]> =>\n  xs.slice(0, ys.length).map((x, i) => [x, ys[i]])\n\nexport const pairwise = <X>(xs: Array<X>): Array<[X, X]> => zip(xs, xs.slice(1))\n\nexport type Msg<K, P = undefined> = P extends undefined\n  ? { type: K }\n  : {\n      type: K\n      payload: P\n    }\n\nexport type Updater<S, A> = (state: S, action: A) => Partial<S>\n\nexport const asReducer = <S, A>(update: Updater<S, A>): Reducer<S, A> => (\n  state,\n  action\n) => ({ ...state, ...update(state, action) })\n","import React, { FC } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\n\nimport { codes } from '../Translator'\n\nconst useStyles = makeStyles((theme) => ({\n  default: {},\n  focused: {\n    borderColor: '#000',\n  },\n  done: {\n    borderColor: theme.palette.success.light,\n    pointerEvents: 'none',\n  },\n  loading: {\n    borderColor: theme.palette.warning.light,\n    pointerEvents: 'none',\n  },\n  waiting: {\n    opacity: 0.4,\n    pointerEvents: 'none',\n  },\n}))\n\nexport type LanguageButtonProps = {\n  code: string\n  status: 'default' | 'focused' | 'done' | 'loading' | 'waiting'\n  onClick: () => void\n}\n\nexport const LanguageButton: FC<LanguageButtonProps> = ({\n  code,\n  status = 'default',\n  onClick,\n}) => {\n  const classes = useStyles()\n\n  return (\n    <Button variant='outlined' className={classes[status]} onClick={onClick}>\n      {codes[code]}\n    </Button>\n  )\n}\n\nexport const Example: FC = () => (\n  <>\n    {(['default', 'done', 'loading', 'waiting'] as const).map((s) => (\n      <LanguageButton key={s} code={s} status={s} onClick={() => console.log(s)} />\n    ))}\n  </>\n)\n","import React, { FC } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button, { ButtonProps } from '@material-ui/core/Button'\nimport AddIcon from '@material-ui/icons/Add'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderStyle: 'dashed',\n    color: theme.palette.text.disabled,\n\n    '&:hover': {\n      color: theme.palette.text.primary,\n      borderColor: theme.palette.text.primary,\n      backgroundColor: 'rgba(0, 0, 0, 0)',\n    },\n  },\n}))\n\nexport type LanguageAddButtonProps = ButtonProps\n\nexport const LanguageAddButton: FC<LanguageAddButtonProps> = ({ ...props }) => {\n  const classes = useStyles()\n\n  return (\n    <Button className={classes.root} variant='outlined' {...props}>\n      <AddIcon />\n    </Button>\n  )\n}\n","import React, { FC } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport InputBase from '@material-ui/core/InputBase'\nimport ButtonBase from '@material-ui/core/ButtonBase'\nimport DeleteIcon from '@material-ui/icons/DeleteOutline'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Paper from '@material-ui/core/Paper'\nimport { InputAdornment, IconButton } from '@material-ui/core'\nimport { languages } from '../Translator'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRadius: 0,\n    boxShadow: 'none',\n  },\n\n  input: {\n    fontSize: theme.typography.h6.fontSize,\n    width: '100%',\n    padding: '0.4em',\n    borderRadius: 0,\n    boxShadow: '0 2px 4px -1px rgba(0,0,0,0.4)',\n  },\n\n  options: {\n    margin: '4px 0 0 0',\n    padding: 0,\n    listStyle: 'none',\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    boxShadow: '0 2px 4px -1px rgba(0,0,0,0.2)',\n  },\n\n  option: {\n    fontSize: theme.typography.body1.fontSize,\n    display: 'flex',\n    padding: '0.5em',\n  },\n\n  selected: {\n    background: theme.palette.primary.light,\n    color: theme.palette.getContrastText(theme.palette.primary.light),\n  },\n}))\n\nexport type LanguageSearchProps = {\n  searchValue: string\n  selected?: undefined | string\n  onSearchValueChange: (value: string) => void\n  onSelect: (code: string) => void\n  onRemove: () => void\n  onClose: () => void\n}\n\nexport const LanguageSearch: FC<LanguageSearchProps> = ({\n  searchValue,\n  selected,\n  onSearchValueChange,\n  onSelect,\n  onRemove,\n  onClose,\n}) => {\n  const classes = useStyles()\n  const searchValueLower = searchValue.toLowerCase()\n\n  return (\n    <Paper className={classes.root}>\n      <InputBase\n        autoFocus\n        className={classes.input}\n        placeholder='Search Languages'\n        value={searchValue}\n        onChange={(e) => onSearchValueChange(e.target.value)}\n        endAdornment={\n          <InputAdornment position='end'>\n            <IconButton onClick={(_) => onRemove()}>\n              <DeleteIcon />\n            </IconButton>\n            <IconButton onClick={(_) => onClose()}>\n              <CloseIcon />\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n      <ul className={classes.options}>\n        {languages\n          .filter((e) => e.name.toLowerCase().match(searchValueLower))\n          .map((e) => (\n            <li\n              key={e.code}\n              className={\n                classes.option + ' ' + (e.code === selected ? classes.selected : '')\n              }\n            >\n              <ButtonBase\n                style={{ fontSize: 'inherit' }}\n                onClick={(_) => onSelect(e.code)}\n              >\n                {e.name}\n              </ButtonBase>\n            </li>\n          ))}\n      </ul>\n    </Paper>\n  )\n}\n","import React, { FC } from 'react'\nimport MuiAppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport GithubIcon from '@material-ui/icons/GitHub'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: 'white',\n    borderBottom: '1px solid rgba(0,0,0,0.12)',\n    color: '#5f6368',\n  },\n\n  menuButton: {},\n\n  title: {\n    flexGrow: 1,\n  },\n}))\n\nexport const AppBar: FC = () => {\n  const classes = useStyles()\n\n  return (\n    <MuiAppBar position='static' elevation={0} className={classes.appBar}>\n      <Toolbar>\n        <Typography variant='h6' className={classes.title}>\n          In Other\n          <span style={{ color: '#4285f4' }}> W</span>\n          <span style={{ color: '#ea4335' }}>o</span>\n          <span style={{ color: '#fbbc05' }}>r</span>\n          <span style={{ color: '#34a853' }}>d</span>\n          <span style={{ color: '#4285f4' }}>s</span>\n        </Typography>\n        <IconButton\n          href='https://github.com/betafcc/in-other-words'\n          // target='_blank'\n          // rel='noopener noreferrer'\n          edge='end'\n          className={classes.menuButton}\n          color='inherit'\n        >\n          <GithubIcon />\n        </IconButton>\n      </Toolbar>\n    </MuiAppBar>\n  )\n}\n","import React, { FC } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Divider from '@material-ui/core/Divider'\nimport TextareaAutosize, {\n  TextareaAutosizeProps,\n} from '@material-ui/core/TextareaAutosize'\nimport TranslateIcon from '@material-ui/icons/Translate'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { State } from '../program'\nimport { LanguageButton } from './LanguageButton'\nimport { LanguageAddButton } from './LanguageAddButton'\nimport { LanguageSearch } from './LanguageSearch'\nimport { AppBar } from './AppBar'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    backgroundColor: theme.palette.background.default,\n  },\n\n  main: {\n    minWidth: 275,\n    maxWidth: 1280,\n    margin: '0 auto',\n  },\n\n  bar: {\n    display: 'flex',\n    flexFlow: 'row nowrap',\n    margin: 0,\n    padding: '10px 0',\n\n    '&> *': {\n      margin: '0 4px',\n    },\n  },\n\n  translateButton: {\n    display: 'inline-flex',\n    padding: '4px',\n\n    '& button': {\n      backgroundColor: '#454545',\n      color: '#ffffff',\n      border: '1px solid #454545',\n\n      '&:hover': {\n        backgroundColor: 'rgba(0, 0, 0, 0.4)',\n        borderColor: 'rgba(0, 0, 0, 0.4)',\n      },\n\n      '&.Mui-disabled': {\n        backgroundColor: '#999',\n        color: '#eee',\n      },\n    },\n  },\n\n  languages: {\n    flexGrow: 1,\n    display: 'flex',\n    flexFlow: 'row wrap',\n    overflowX: 'auto',\n\n    '&> *': {\n      margin: '4px',\n    },\n\n    '& button': {\n      backgroundColor: theme.palette.background.paper,\n    },\n  },\n\n  contentContainer: {\n    position: 'relative',\n  },\n\n  content: {\n    border: '1px solid rgba(0,0,0,0.12)',\n    boxShadow: '0 2px 2px rgba(0,0,0,0.22)',\n    minHeight: '15em',\n    display: 'flex',\n    flexFlow: 'row nowrap',\n    '&> *': {\n      width: '50%',\n    },\n\n    '&> *:nth-child(2)': {\n      backgroundColor: '#f5f5f5',\n    },\n  },\n\n  languageSearch: {\n    position: 'absolute',\n    width: '100%',\n    top: 0,\n  },\n\n  textarea: {\n    width: '100%',\n    height: '100%',\n    background: 'none',\n    fontSize: '1.5rem',\n    fontFamily: theme.typography.fontFamily,\n    color: theme.palette.text.primary,\n    overflow: 'auto hidden',\n    outline: 'none',\n    border: 'none',\n    resize: 'none',\n  },\n\n  inputCard: {\n    borderRight: '1px solid rgba(0,0,0,0.12)',\n  },\n\n  outputRunning: {\n    color: theme.palette.text.disabled,\n  },\n}))\n\nexport type Dispatchers = {\n  translate: (languages: State['languages']) => void\n  focus: (index: number) => void\n  setInput: (value: string) => void\n  setSearch: (value: string) => void\n  addLanguage: (code: string) => void\n  removeLanguage: () => void\n  editLanguage: (code: string) => void\n  closeSearch: () => void\n}\n\nexport const InOtherWords: FC<State & Dispatchers> = ({\n  status,\n  languages,\n  focused,\n  searchValue,\n  inputValue,\n  outputValue,\n  done,\n\n  translate,\n  focus,\n  setInput,\n  setSearch,\n  addLanguage,\n  removeLanguage,\n  editLanguage,\n  closeSearch,\n}) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <AppBar />\n      <div className={classes.main}>\n        <div className={classes.bar}>\n          <TranslateButton status={status} languages={languages} translate={translate} />\n          <Divider orientation='vertical' flexItem />\n          <Languages\n            languages={languages}\n            status={status}\n            done={done}\n            focused={focused}\n            focus={focus}\n          />\n        </div>\n        <div className={classes.contentContainer}>\n          <Card className={classes.content} square elevation={0}>\n            <CardContent className={classes.inputCard}>\n              <Textarea value={inputValue} onChange={(e) => setInput(e.target.value)} />\n            </CardContent>\n            <CardContent>\n              <Textarea\n                disabled\n                className={status === 'running' ? classes.outputRunning : ''}\n                value={outputValue}\n              />\n            </CardContent>\n          </Card>\n          {status === 'editing' ? (\n            <div className={classes.languageSearch}>\n              <LanguageSearch\n                searchValue={searchValue}\n                selected={languages[focused]}\n                onSearchValueChange={(value) => setSearch(value)}\n                onSelect={(code) => {\n                  if (focused >= languages.length) addLanguage(code)\n                  else editLanguage(code)\n                }}\n                onRemove={removeLanguage}\n                onClose={closeSearch}\n              />\n            </div>\n          ) : null}\n        </div>\n        <PoweredByYandex />\n      </div>\n    </div>\n  )\n}\n\nexport const TranslateButton: FC<\n  Pick<State, 'status' | 'languages'> & Pick<Dispatchers, 'translate'>\n> = ({ status, languages, translate }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.translateButton}>\n      <Button\n        disabled={status === 'running'}\n        variant='outlined'\n        onClick={(_) => translate(languages)}\n      >\n        <TranslateIcon />\n      </Button>\n    </div>\n  )\n}\n\nexport const Languages: FC<\n  Pick<State, 'status' | 'languages' | 'done' | 'focused'> & Pick<Dispatchers, 'focus'>\n> = ({ status, languages, done, focused, focus }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.languages}>\n      {languages.map((code, i) => (\n        <LanguageButton\n          key={`${code}-${i}`}\n          status={languageButtonState({ status, done, focused }, i)}\n          code={code}\n          onClick={() => focus(i)}\n        />\n      ))}\n      {status === 'running' || languages.length >= 10 ? null : (\n        <LanguageAddButton onClick={() => focus(languages.length)} />\n      )}\n    </div>\n  )\n}\n\nconst languageButtonState: (\n  state: Pick<State, 'status' | 'done' | 'focused'>,\n  i: number\n) => 'default' | 'focused' | 'done' | 'loading' | 'waiting' = (state, i) => {\n  if (state.status === 'running') {\n    if (i < state.done) return 'done'\n    else if (i === state.done) return 'loading'\n    else return 'waiting'\n  } else {\n    if (state.status === 'editing' && i === state.focused) return 'focused'\n    else return 'default'\n  }\n}\n\nexport const Textarea: FC<TextareaAutosizeProps> = ({ className, ...props }) => {\n  const classes = useStyles()\n\n  return (\n    <TextareaAutosize\n      className={classes.textarea + ' ' + className}\n      rows={6}\n      spellCheck={false}\n      autoCapitalize='off'\n      autoComplete='off'\n      autoCorrect='off'\n      {...props}\n    />\n  )\n}\n\nexport const PoweredByYandex: FC = () => (\n  <div\n    style={{\n      display: 'block',\n      width: '100%',\n      textAlign: 'right',\n      marginTop: '0.5em',\n    }}\n  >\n    <a\n      style={{\n        textDecoration: 'none',\n        color: '#333',\n        marginRight: '0.5em',\n      }}\n      href='http://translate.yandex.com'\n    >\n      Powered by Yandex\n    </a>\n  </div>\n)\n","import { Msg, asReducer } from './util'\n\nexport type State = {\n  status: 'editing' | 'running' | 'default'\n\n  languages: Array<string>\n  focused: number\n  searchValue: string\n\n  inputValue: string\n  outputValue: string\n\n  done: number\n}\n\nexport const initial: State = {\n  status: 'default',\n\n  languages: [],\n  focused: 0,\n  searchValue: '',\n\n  inputValue: '',\n  outputValue: '',\n\n  done: 0,\n}\n\nexport type Action =\n  | Msg<'addLanguage', string>\n  | Msg<'removeLanguage'>\n  | Msg<'editLanguage', string>\n  | Msg<'setInput', string>\n  | Msg<'setSearch', string>\n  | Msg<'closeSearch'>\n  | Msg<'focus', number>\n  | Msg<'start'>\n  | Msg<'stop'>\n  | Msg<'receive', string>\n\nexport const reducer = asReducer<State, Action>((s, a) => {\n  switch (a.type) {\n    case 'addLanguage':\n      return {\n        status: 'default',\n        searchValue: '',\n        languages: [...s.languages, a.payload],\n      }\n    case 'removeLanguage':\n      return {\n        status: 'default',\n        searchValue: '',\n        languages: s.languages\n          .slice(0, s.focused)\n          .concat(s.languages.slice(s.focused + 1)),\n      }\n    case 'editLanguage':\n      return {\n        status: 'default',\n        searchValue: '',\n        languages: s.languages.map((e, i) => (s.focused !== i ? e : a.payload)),\n      }\n    case 'setInput':\n      return { inputValue: a.payload, outputValue: '' }\n    case 'setSearch':\n      return { searchValue: a.payload }\n    case 'closeSearch':\n      return { status: 'default', searchValue: '' }\n    case 'focus':\n      return { status: 'editing', focused: a.payload }\n    case 'start':\n      return { status: 'running', done: 0 }\n    case 'stop':\n      return { status: 'default' }\n    case 'receive':\n      return { done: s.done + 1, outputValue: a.payload }\n  }\n})\n","import React, { FC, useReducer, useEffect } from 'react'\nimport queryString from 'query-string'\n\nimport { InOtherWords } from './InOtherWords'\nimport { initial, reducer, State } from '../program'\nimport { Translator } from '../Translator'\n\nconst setQuery = (state: State) => {\n  const newurl =\n    window.location.protocol +\n    '//' +\n    window.location.host +\n    window.location.pathname +\n    '?' +\n    queryString.stringify(\n      Object.fromEntries(\n        [\n          ['i', state.inputValue],\n          ['o', state.status === 'running' ? '' : state.outputValue],\n          ['l', state.languages],\n        ].filter((e) => !!e[1])\n      ),\n      { arrayFormat: 'comma' }\n    )\n\n  window.history.pushState({ path: newurl }, '', newurl)\n}\n\nconst getQuery = (): Partial<State> => {\n  const q = queryString.parse(window.location.search, { arrayFormat: 'comma' }) as any\n\n  return {\n    inputValue: q.i || '',\n    outputValue: q.o || '',\n    languages: q.l === undefined ? [] : Array.isArray(q.l) ? q.l : [q.l],\n  }\n}\n\nconst queryInitial = getQuery()\n\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))\n\nexport const App: FC = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    ...initial,\n    ...queryInitial,\n  })\n\n  useEffect(() => setQuery(state))\n\n  return (\n    <InOtherWords\n      {...state}\n      translate={async (languages) => {\n        if (state.languages.length >= 2) {\n          dispatch({ type: 'start' })\n\n          for await (const el of Translator.create().inOtherWords(\n            state.inputValue,\n            state.languages as any\n          )) {\n            dispatch({ type: 'receive', payload: el.result })\n            await sleep(800)\n          }\n\n          dispatch({ type: 'stop' })\n        }\n      }}\n      focus={(index) => dispatch({ type: 'focus', payload: index })}\n      setInput={(value) => dispatch({ type: 'setInput', payload: value })}\n      setSearch={(value) => dispatch({ type: 'setSearch', payload: value })}\n      addLanguage={(code) => dispatch({ type: 'addLanguage', payload: code })}\n      editLanguage={(code) => dispatch({ type: 'editLanguage', payload: code })}\n      removeLanguage={() => dispatch({ type: 'removeLanguage' })}\n      closeSearch={() => dispatch({ type: 'closeSearch' })}\n    />\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}